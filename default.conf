# Formato de vários servidores em um único ip, varios servidores usarão um único ip
# a mesma porta 443 mas certificados diferentes

upstream nodes {
    server                  node1:8080;
    server                  node2:8081;
}


server {
    listen                  80;

    location / {
        return              301 https://$host$request_uri;
    }
}

server {

    listen                  443 ssl;

    server_name             api-mtls-aws.cryss.dev;

    ssl_certificate         /etc/nginx/ssl/server.crt;
    ssl_certificate_key     /etc/nginx/ssl/server.key;
    ssl_protocols           TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;

    # # Setando somente protocolos mais recentes
    # ssl_protocols           TLSv1.3;

    ssl_ciphers             HIGH:!aNULL:!MD5;

    ssl_client_certificate  /etc/nginx/client_certs/ca.crt;
    ssl_verify_client       optional;
    ssl_verify_depth        2;

    location / {

        if ($ssl_client_verify != SUCCESS) { return 403; }

        proxy_set_header     SSL_Client_Issuer $ssl_client_i_dn;
        proxy_set_header     SSL_Client $ssl_client_s_dn;
        proxy_set_header     SSL_Client_Verify $ssl_client_verify;
        
        proxy_pass                      http://nodes;

        proxy_set_header                Host $host;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_connect_timeout   30;
        proxy_send_timeout      30;
        proxy_read_timeout      30;

        proxy_pass_request_headers      on;



        # Verificar isso depois https://stackoverflow.com/questions/43648218/how-to-set-the-path-to-geoip-in-nginx
        
        # proxy_set_header                HTTP_Country-Code $geoip_country_code;

        #proxy_pass           https://nodes; ----> seu eu uso https no protocolo do lb - recebo erro 502 Bad Gateway do linux
        #proxy_pass           http://node1:8080;
    }
}

# server {
#     listen                  443 ssl;

#     server_name             api2.local.com;

#     ssl_certificate         /etc/nginx/ssl/server2.crt;
#     ssl_certificate_key     /etc/nginx/ssl/server2.key;
#     ssl_protocols           TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
#     ssl_ciphers             HIGH:!aNULL:!MD5;

#     # ssl_client_certificate  /etc/nginx/client_certs/ca.crt;
#     # ssl_verify_client       optional;
#     # ssl_verify_depth        2;

#     location / {
#         # if ($ssl_client_verify != SUCCESS) { return 403; }

#         # proxy_set_header     SSL_Client_Issuer $ssl_client_i_dn;
#         # proxy_set_header     SSL_Client $ssl_client_s_dn;
#         # proxy_set_header     SSL_Client_Verify $ssl_client_verify;
        
#         #proxy_pass           https://nodes;
#          proxy_pass           http://node2:8081;
#     }
# }